// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package i18n generated by go-bindata.// sources:
// locales/en-US/home.yml
// locales/zh-CN/home.yml
package i18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localesEnUsHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xcd\x72\xa3\x3a\x16\xde\xf3\x14\x0a\xae\xde\xf5\xdc\xba\xeb\xec\x68\x4c\x12\xa6\x6d\xa0\x00\xe7\xde\xcc\x86\x92\xe1\xd8\xd6\x04\x4b\x94\x24\x92\xf1\xdd\xcd\x7b\xcd\x3b\xcd\x2b\x4c\x1d\x49\x60\xb0\x9d\xee\x74\xcd\xaa\x3b\x89\xce\x8f\xce\xcf\xf7\x7d\x62\x51\x8b\xe3\x51\x70\x2f\x09\xd6\x51\x15\xfd\x19\x17\x65\x71\x4f\xfc\x84\x1e\x81\xd0\x56\x02\x6d\x4e\x04\xfe\xc5\x94\x56\xbe\x17\x67\x55\x92\x96\xe7\x43\x59\x0b\x54\x01\xd9\xb1\xb6\x25\x8c\x13\x7d\x00\x22\x61\xcf\x94\x96\x27\x12\x67\x44\xd8\x5f\xa9\x93\xd2\x70\x24\x0a\xb4\x66\x7c\x4f\x3a\xba\x07\xdf\xf3\xbc\x45\xdd\xf6\x4a\x83\xf4\xc2\xd5\xa6\x28\xa3\xbc\x5a\x46\xab\xa8\x8c\xaa\x87\x20\x5e\x45\xcb\x7b\xe2\xd7\x94\x13\x2e\x34\x69\xa0\x05\x0d\xc4\x1d\xc7\x40\x75\x2f\x25\x70\x4d\x94\xa6\x1a\xfc\xd1\x41\x5c\x98\xf4\xf2\x4d\x92\xc4\xc9\xe3\x3d\xf1\xcb\xc3\xc4\x4c\x19\x67\xb2\xe7\x9c\xf1\xfd\x95\xd1\x2a\x0d\x83\xd5\x3d\xf1\xe3\x63\x27\xa4\x1e\xad\x6a\xca\xd1\x6a\x0b\xa4\xef\xf6\x92\x36\xd0\xf8\x98\xb9\x84\x06\xb8\x66\xb4\xf5\x66\x49\x57\x79\x54\xa4\x9b\x3c\x8c\xee\x89\xff\x40\x59\x0b\x0d\xd1\xc2\xe5\x7f\x47\xca\x03\x48\xc0\x3c\x28\x27\x54\x29\x51\x33\xaa\xa1\x21\x07\xa1\x34\xe9\x79\x03\x92\xe8\x03\x53\xe4\x15\x4e\xfe\x07\x6e\xab\x7f\xa4\xc9\x2f\xf9\xfe\x4b\x70\xb8\xe1\xfb\x21\xd8\xac\xca\x2a\xcc\xa3\x65\x94\x94\x71\xb0\xaa\xc2\x20\x31\x55\xb0\x61\xef\x89\xbf\x84\x1d\xed\x5b\x4d\xce\x37\x9d\x94\xc2\x06\x6d\x7c\x3b\x32\xe1\x53\x14\x7e\x3f\x77\xcd\xd4\xfc\x6c\xc5\x71\x8e\xce\xa6\x66\x1e\xcc\x68\x29\xf3\xff\x5e\x81\x34\x67\x7c\x2f\x0b\x8a\xe2\x8f\x34\x5f\x8e\xc9\x24\x9b\x15\x76\xa4\xa3\x4a\xbd\x0b\xd9\x90\x61\x1e\xb6\x40\xb6\x2d\xe5\xaf\xff\xfd\xcf\xbf\x7d\x2f\xcb\xe3\xe7\xa0\x8c\xaa\xef\xd1\xcb\xa5\x21\x66\xd2\x49\xf6\x46\x35\xe0\xc5\x27\x59\x9c\xcd\xbd\x05\x96\xdf\x7b\x4a\x8b\xb2\x0a\x56\x79\x14\x2c\x5f\xce\xe3\xfd\x84\x9d\xb9\xdc\x01\xd7\x19\x63\x31\x5e\xfa\x66\x43\x6c\x67\xb1\x27\xce\xc5\xa4\x31\xef\x4c\x1f\x4c\x01\xdc\xa0\xdd\xf2\x5b\x7d\x7b\xa9\xb2\x3c\xfd\x7b\x14\x96\xff\x57\x88\x4e\x8a\x7f\x42\xad\x7d\xaf\x78\x29\xca\x68\x5d\xb9\x2d\x7e\x48\x37\xc9\xf2\xf6\x12\xb7\xa2\xa6\x2d\x6e\xf0\x8e\x49\xa5\x4d\xa1\x92\x14\xed\x82\xe7\x20\x5e\x05\xdf\x56\x38\x22\x89\x20\x71\x47\xe8\x1b\x65\x2d\xdd\xb6\xe0\x7b\x71\x61\xb7\xc8\xdc\x61\xb2\xbf\xcc\xae\x94\x75\x8a\x09\xfb\xb6\xde\xf1\x3a\x4b\xf3\xb2\x8a\xf2\x3c\xcd\x87\x9e\x25\x82\x34\x54\x53\xbc\xa6\x33\x7b\xa7\x8a\xec\x44\xcf\x9b\x3b\xe2\x32\xad\x0f\x50\xbf\x9a\x3c\xdd\x91\x1d\x6b\xe1\x6e\xee\x14\xdd\x55\xcf\xc1\x6a\x83\x99\x46\xc7\x4e\x9f\xac\x5f\xc1\x49\xcb\x38\x90\x2f\xea\xe2\x7c\x5a\x56\x61\xba\xce\x4c\x0f\x06\xbb\x98\xd7\xe2\xd8\x19\xf0\xf9\xa1\xf1\x1f\x79\x9a\x3c\x56\x0f\x69\xbe\x0e\x4a\x67\x26\x25\xd4\x9a\xd8\xec\x84\x3c\x52\xfd\xa1\xf1\x64\x0b\xa7\x5d\x09\x27\x2b\x24\xb4\xad\xc0\x87\x3e\xdc\x94\xcc\xdb\x6a\xbb\xfe\x09\x6b\x37\x6d\xc9\x66\x7d\x4f\xfc\x80\x68\xa1\x69\x4b\xc4\x8e\x7c\x51\x44\x8a\x77\x85\xff\x35\xd7\xa7\x12\x08\xdd\x72\xbc\x4e\xfb\x95\xa8\x57\xd6\x39\x3f\x23\x3c\x0d\x73\x1b\x27\xf3\xa5\xd8\x32\xee\x70\x4e\x82\x12\xbd\xac\x31\x89\xaf\x44\x02\x55\x82\xdf\x7f\x90\x4f\x11\x3c\xcf\xb1\x4e\xd1\x37\x37\xf0\x17\xc6\x9e\xb7\x40\x1c\x39\x23\x08\xd6\x61\x1d\x94\xe1\xd3\x80\x02\x03\x84\x30\x45\xd8\xd0\x1d\xdf\x4b\xf3\xf8\x31\x4e\x5c\xe1\xa7\xe7\x85\x64\x7b\xc6\x69\xfb\x91\xe1\xa6\x38\x13\x47\x10\x96\xb1\x49\xb4\x1c\xe0\xcc\x31\x0d\x70\x5c\x8b\xc9\xd8\x0a\xae\x69\xad\xcd\xe0\xd2\xe6\xc8\x38\xf2\x24\xd5\x42\xde\x39\x87\xd3\xee\x25\x82\xa8\xbe\x3e\x18\x87\x66\xff\x82\xe5\x3a\x4e\xae\x71\x1a\x83\x36\x0e\xab\x8d\x53\x9b\xc2\x15\x56\xdf\xcd\x93\xce\xa3\x55\x50\x46\xcb\x09\xbc\x6c\xd0\xec\x40\x31\xf5\x29\x88\x38\xec\x30\x29\xac\x96\x41\x36\x66\xb0\xc9\x96\xc1\x98\x41\xdb\xd0\xee\x32\x30\x34\xcc\xc6\x7d\x8e\xf2\xf8\xe1\xa5\x0a\xd3\xe5\x84\xdb\x9f\x41\xb2\x1d\xab\xa9\x66\x82\x93\x5a\x34\x40\x40\x4a\x21\x7d\x2f\x5a\x07\xf1\xaa\x5a\xc6\x85\x43\x99\x35\x65\xed\x20\x1d\x94\x19\xc1\x86\xa9\x4f\x16\x76\xf0\x36\x6d\x6f\x74\x44\x87\x47\xaa\xeb\x03\xd9\x99\xd1\xb2\xf0\x86\x4c\x36\xce\x4f\x81\x3f\x8d\xb9\x62\x69\x7e\x40\x63\xc3\x8c\x5c\x3a\x31\xb8\x76\x4f\xfc\x77\x29\xf8\xfe\x4c\x74\x44\xc8\x89\x89\x4d\xd0\x30\xce\x98\xdc\x25\xe3\x78\x0b\x14\x55\x82\x0f\x14\x91\x47\x8f\x71\x9a\x7c\x56\x72\x10\x6b\xfc\x33\x92\x40\xa5\x80\xa1\xf0\xdf\x21\x10\xaa\x8d\x4f\x87\x31\x52\xe3\x67\x4c\xd4\x52\x3e\x57\x5e\x16\xf5\x43\x5b\xd8\x3d\xe8\x29\x27\xde\x00\xfc\x5a\xf0\x1d\xdb\xf7\xd2\xcc\x8d\x69\x5c\xbc\x0e\x1e\xa3\x8f\x5d\xb1\x23\xdd\xc3\xe7\x1c\x65\x55\xf1\x94\xe6\x16\xc0\x55\xbf\xdb\xb1\x9a\xa1\xc6\x8c\x3b\x2c\x8b\xe8\x80\x2b\x4d\xeb\x57\xef\x31\x2a\x87\x0e\x0c\x1d\x4e\xc4\x50\x64\x03\xb4\x78\xde\xed\xcd\x1a\x8e\x5b\x90\xe3\xea\x05\x4b\x9c\xa7\x2f\x8a\x8c\xdb\xb6\x05\xe0\x84\x36\x46\x57\x4e\x17\x74\xc0\x81\x2f\x6a\x86\x29\xc6\xbf\x13\x2e\x2e\xc4\x28\xe7\x06\x12\xf8\x50\xcb\x39\x83\x5b\x42\x6e\xb0\x7d\x0a\x8a\xca\xb5\x67\x42\x21\x93\x56\x8e\xad\x09\x6f\x20\x8c\xb7\xe0\xa2\x01\x2f\xc1\x4d\x1f\xc4\x94\x13\xe3\x55\x19\x14\xdf\x91\x5e\x9a\x86\xe0\x21\xdc\x02\xa7\xeb\xcd\x8f\xc3\xd4\x38\x79\xfe\xb5\xb3\x0d\x7b\xa7\x4c\x13\xa6\x49\x23\x38\xfc\x86\x01\xb6\xb4\x7e\xed\xbb\xa0\xae\x45\xcf\xb5\x97\x05\x79\xb0\xae\xa2\x75\x56\xbe\x5c\xb6\xad\xa3\x92\x1e\x41\x83\x54\xa8\x5d\xca\xaa\xd8\x64\x99\xed\xee\x86\xab\xbe\x43\x66\xc6\x19\x3e\x75\xf8\x7e\x98\x2b\xd8\x19\x36\x59\x8c\x18\xe5\xd9\xb7\x20\xfc\xbe\xc9\xaa\x20\x0c\xd3\x4d\xf2\x2b\x42\x6d\x96\xf8\xa7\x15\x9b\xb7\xc0\x95\xb9\x78\x0d\x7c\x22\x1a\x5a\xfd\x42\x10\xd7\xd5\x6f\x26\x47\xcf\xdd\xf1\x21\x5e\x45\xc5\x54\x4f\xbb\x25\x72\x6d\xd3\xe3\xa5\x8c\xfe\x22\x5b\xd8\x09\x09\x44\xbd\x33\x5d\x1f\xf0\x9d\x37\x39\x40\xed\xb5\x67\xab\x6f\xa3\x5c\x3f\xd2\xb6\x80\xc6\x68\x08\x0d\xe9\x3b\x33\xec\x13\xb3\x3c\x2a\xca\x34\x8f\xae\xed\x24\x28\x2d\x24\xe3\xfb\xf9\x7a\xe4\x4e\x70\x5c\xd7\x70\x72\xcd\x9f\x5e\xee\xac\x83\x6f\xcb\xf4\xf3\xce\x8c\xa2\x7c\x28\xfd\x16\x5a\x81\xd4\xa5\xc5\x1c\xdb\x4a\x7c\x8f\x89\x0e\xa4\xe3\xc0\x71\x9f\x3a\x90\x28\x19\xcd\x46\x59\x59\x74\x05\x09\x4f\x4e\xf5\x8f\x90\xe0\x7b\xa3\x06\xb3\x30\x13\xb9\x93\xc3\xf5\xcd\x30\x58\x98\xc9\x56\x41\x72\xc3\x67\xe6\x46\x66\xe2\xf3\x62\xd8\xaf\x6d\xbe\x5d\x0e\xf5\xc4\xd8\x5b\xa0\x2a\xb0\xa2\x61\x44\x36\x3b\x48\xc5\x89\xd7\x07\x29\x38\xfb\x0b\x5b\xac\x40\x5a\x62\xff\xdd\x49\x8c\x55\xfa\x18\x27\x97\x36\x9b\xa9\xb2\x42\x62\xbc\x73\xa7\xcf\x52\xa1\x3c\x7f\x6b\xe8\xa4\x38\xb0\x2d\xd3\x8a\xe0\x19\x17\x63\x27\xc5\x91\xb4\x62\xbf\xc7\x01\x63\xfc\xb7\xcf\x08\x33\x6f\x51\x33\xe5\x85\x71\x61\x00\xec\x12\xd5\xf0\x91\xc3\x14\xd1\x54\xbd\x5e\x22\x18\x9a\xbe\x1d\x43\x43\x33\xde\xf3\xba\x0a\xd3\xe4\x21\x7e\x3c\xbf\x2d\xc3\x29\x01\x5d\x51\xfe\xd9\xe0\xf2\xa3\x48\x79\x49\x5e\x1f\x0d\x5a\x03\x5d\x2b\x4e\x47\x83\x85\x2d\xe5\x9f\x1c\x38\x6f\xc1\x3a\xa4\xc2\x31\x4f\x8c\x07\x5c\x83\x84\x06\x1f\x84\x0a\xf6\xc6\x25\xa6\xd0\xb2\x5a\xab\x33\x9e\x98\xdc\xb1\xb4\xe7\x63\x5f\x49\x37\x7f\x5c\xd2\x3d\x65\x7c\xfc\x8e\x34\x7d\x4d\xc6\x19\xbe\x37\x30\xc3\xba\xee\x3b\x06\x0d\xa1\xbc\x99\x24\x29\xc1\x78\x6a\x8c\x71\x9c\x3c\x07\xab\x18\xcb\x11\x77\x56\x9a\xbf\xd1\x96\x35\x03\x8f\x4f\xde\xff\xbc\x47\x02\xc6\x27\xcc\x1e\x38\x5e\xdd\x5e\x83\x36\x8d\x04\xa5\xc0\x44\xfc\xfd\xb7\x6b\x7d\xa0\x34\x95\xe6\x32\xee\xa4\xc9\x46\xf5\x5b\x0e\x38\x78\xa6\x4c\x7f\xeb\x84\x68\x31\x5c\x96\xa6\xab\x9b\x7d\x8a\x33\x82\x67\x26\x44\x7f\x03\x86\xc7\x07\xb4\x55\x50\xf3\x5b\x8f\x04\x6d\x35\xa0\xd2\xf2\xe4\xa1\xf8\x28\xca\xfc\xe5\xfa\x7b\x45\x39\xfd\xfe\x26\x76\xf6\x93\x0f\x95\xf5\x81\x69\xa8\x75\x2f\xc1\xf0\xdd\x0d\x7d\xe9\x40\x69\xc4\xca\x01\x6f\xb3\x3c\x7d\x8e\x97\x51\x3e\x2a\x9d\x29\xe6\xd6\x12\xcc\x4d\xb0\xad\xbd\x16\x47\xaa\x59\x4d\x8e\x48\xe6\x2e\xff\x23\xe5\x3d\x6d\xdb\x13\xfe\x92\xed\x4e\xf3\x07\xa0\x9a\x40\x56\xf9\x92\x45\xb3\x10\x06\xa9\x6c\xb2\x6e\xe5\x47\xca\xbe\x23\x29\x6f\x4f\xc3\xcf\x8a\x20\x42\x7e\x25\x73\xa4\xfa\x39\x5b\x9f\xf1\x7a\xf7\x03\xb6\x26\x06\x07\x60\x7f\x8b\x3f\x91\xa9\x66\xe4\x76\xe6\x2e\x5a\x6b\xf3\xd1\xc9\xee\x93\x02\xa5\x50\xbc\x17\x51\x51\xa0\x68\xfc\x1e\xbd\xcc\x60\xd4\xfd\xdd\x7c\xa1\x72\x73\xec\xa4\x60\x96\xa7\x48\x4e\x93\x69\x1f\xce\xda\xa7\x96\xe0\x6f\x20\xd5\x54\xa4\x18\x33\xd4\x70\x49\x3a\x15\xec\xfd\xe4\x6d\x37\xd4\xdf\x0c\x31\x32\x26\xdd\x83\x67\xfa\x8c\xd9\x61\xab\xff\x2c\x62\x14\x16\x85\xfd\x1b\x42\xe9\x1b\x6b\x40\x5e\x8e\xcd\xff\x02\x00\x00\xff\xff\x26\xb5\x7b\x5a\x37\x16\x00\x00")

func localesEnUsHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesEnUsHomeYml,
		"locales/en-US/home.yml",
	)
}

func localesEnUsHomeYml() (*asset, error) {
	bytes, err := localesEnUsHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/en-US/home.yml", size: 5687, mode: os.FileMode(420), modTime: time.Unix(1620872440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesZhCnHomeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x58\x5d\x53\x1a\x4b\x1a\xbe\x9f\x5f\x41\x41\x9d\xbb\xb3\x5b\x7b\x9d\xbb\x09\x8c\x66\x36\xc3\xcc\xd4\xcc\xe0\x39\xee\xcd\x94\xc7\xb0\x59\x37\x0a\x96\xe8\x56\x9d\xbd\x0a\x7e\x01\x06\x84\x93\x88\x1b\x95\x44\x31\x1a\x39\x1a\xc0\x8f\x44\x08\x1f\xfa\x67\xa6\x7b\x86\x2b\xff\xc2\x56\x77\xcf\x34\x0d\xc4\xc4\x9b\x54\x85\x79\x9f\xb7\xdf\x7e\x3f\x9e\xf7\x69\x03\xd3\xf1\xb9\xb9\x78\x8c\x93\xf9\xb0\x60\x0a\xbf\x8a\xba\xa1\x3f\xf2\xf9\x41\x21\x67\x9f\x9c\x83\xc6\x25\xa8\xbe\x05\xa5\x8a\x9f\x13\x55\x53\x56\x8c\xbe\x81\x53\x6f\x80\x52\xc5\xbe\x6a\xdb\xed\x7d\xa7\x76\x63\x77\x6b\xbd\xf2\x97\xde\xbb\x43\x50\x3e\x03\xeb\x3b\x56\xfb\x0d\x68\xbd\x11\x55\x3f\xc7\x05\xa6\x67\x97\x12\x8b\xd1\x05\x2e\x28\x45\x74\x43\xd0\xcc\x90\x20\x09\x86\x60\x8e\xf1\xa2\x24\x84\x1e\xf9\xfc\xf0\x7f\x07\xf0\xaa\x08\xd2\x07\xbd\x9d\x23\xd0\x7d\x03\x32\x39\x7b\xe3\x1a\xbe\x4c\xda\xbb\xab\xbd\xbd\x75\xfb\xe6\xc8\x4f\xa1\xa2\x8e\x83\xd0\x22\xb2\x2c\xca\xe3\x8f\x7c\x7e\x62\x60\x35\x73\xa0\x54\x71\x6e\x0b\x4e\x39\x6b\x35\xab\x77\x9d\xe4\x08\x44\x52\x82\xbc\x84\xee\x55\xef\x80\xb5\x63\x02\x73\x0f\xce\xa5\xec\xd6\x09\x0e\x74\x21\xfa\x2c\x1a\x5b\x9c\x99\x9a\xe5\x06\x62\x34\x35\x41\x57\x22\x5a\x50\x40\x78\x12\xe6\xd1\x85\xf3\xf9\xf8\xae\x93\x74\xea\xc7\xf6\xc9\xdb\xde\xeb\x63\xab\xf9\x0a\x96\x32\x60\xed\xca\x49\x6e\x59\xcd\x36\x2c\xb5\xfc\xf7\x38\x31\xff\xa1\xc8\x0f\xf5\x04\xf2\x75\x7b\xab\x02\xb2\xd8\xd9\x18\x1f\x91\x0c\x33\xa8\x09\x21\x41\x36\x44\x5e\x32\x83\xbc\x8c\xef\x46\xce\x41\xd9\x68\xbf\x75\x6a\x47\x20\x55\x85\xb9\x9a\xd5\xcc\x39\x2b\x5d\x72\x08\x4e\x08\xae\x6f\xf0\x89\x10\x7c\xda\x4f\x3d\x39\x91\xd4\x9a\x00\xac\xe6\xa6\xbd\x55\x81\xe9\x06\xfa\x71\xaf\x09\x0a\x59\x3f\xa7\xf2\xba\xfe\x8b\xa2\x85\xe8\x81\x72\x44\x22\xb9\x5c\xb7\x0f\x92\x1e\xae\x65\xff\xd9\xc2\x07\xa9\x9a\x38\xc1\x1b\x82\xf9\x54\x98\x1c\x46\x78\x37\x1c\x42\x70\x5c\xe0\x5f\xf1\xc4\x22\xf7\x44\xd1\x0d\x93\x97\x34\x81\x0f\x4d\xf6\x3b\x8d\xa4\x93\x69\x45\x37\xaf\xd8\x9a\x5e\x65\x34\x9d\x14\x67\xb7\xf3\x24\x9d\x5e\x3b\x8d\x3a\x30\x1f\x4f\x9a\xaa\xa6\xfc\x5d\x08\x1a\x0f\xf5\x55\xfe\x6a\xef\xd5\x70\xf8\xfa\xa4\x6e\x08\x61\xd3\x9d\x90\x31\x25\x22\x87\xdc\x01\x59\x4b\x93\x71\x80\xa5\x4f\xb0\xd4\x12\x55\x52\x08\x05\x99\xf2\x13\xbc\x28\xf1\x8f\x25\x54\x37\x51\xf5\x39\x5f\x56\x61\xab\x80\x32\x73\x7d\xe5\xe7\x44\x9d\x34\x2c\x0e\x11\xfb\x72\x23\xb0\x9a\x9b\x64\xb4\x7c\xa2\xea\x03\xeb\x97\xf6\x69\xf2\xae\x93\x85\xa5\x53\x67\xa5\x0b\xd3\x05\xb0\xb1\x0f\x1b\x6d\xb0\x71\xe0\x27\xb9\x14\xc3\xaa\xa2\x19\xa6\xa0\x69\x8a\xe6\xd5\x00\x96\x4e\x61\xe6\x06\xa4\xcf\x41\xbe\x4e\xa6\xc1\xde\x5d\x85\xc5\x73\x98\xab\xe1\xbb\x36\xe0\x87\x97\x70\xff\x98\x7c\x82\xdb\x29\xab\x7d\x8d\xc3\x66\x1d\x22\x57\xe6\x04\x2f\x45\x50\xf4\x3f\x25\x7c\x4e\x39\x0b\x4b\x19\xfb\xcf\x16\xf1\x33\x64\xac\x18\x66\x50\x09\xab\x38\xe7\x43\x20\x6c\x8e\xc6\xb7\x96\x85\xc5\xcf\x83\xb8\x5f\x34\x45\x1e\x37\xc7\x14\x2d\xcc\x1b\x14\x61\x9f\xd5\x41\xfe\x03\x3c\xe8\x80\x4e\xde\x6a\xe6\x60\xf5\x83\x5d\x1e\x3a\x8f\x99\x10\xb6\x1e\xee\x89\x99\x1b\x74\x5c\xfa\x1c\xd4\xd7\x7b\xaf\x8f\x07\x91\x6e\x07\x7c\x0f\x46\xca\x3e\x08\x73\x5b\x48\x8e\x84\x51\xef\xac\x5d\xf8\x86\x2e\x07\xab\x1f\x40\xb3\x79\xd7\xc9\x3a\x8d\x2b\xe7\x36\xe5\x82\x29\x1f\x78\x1d\x28\xe2\xf3\x48\x9d\x49\x3b\x20\x47\xd6\xed\x3b\xd4\xf7\x6e\x2f\x66\xc1\xe6\x3e\xd8\x3b\xb8\xeb\xec\xfe\x94\xf8\x66\x10\x3a\x3f\x21\x50\x2f\x3f\xc2\x73\x5c\x60\x29\x11\x5d\xe8\x0f\x38\xba\x78\x98\x37\x82\x4f\xe8\x74\xf7\xb6\x76\x9c\x7a\xdd\xcf\x29\x9a\x38\x2e\xca\x6e\x4a\xa9\xc9\xe6\xfe\xa0\x55\x44\xef\x33\x2e\x1f\x34\x44\x1c\x0b\xe1\x13\x58\x3a\x05\x05\xc4\x66\xa4\xc9\x9c\xe4\x16\xda\x1d\xb5\xb2\x5d\x58\x07\x7f\xbc\xc5\x1d\x86\xd1\x6c\xee\x11\x41\x57\x8f\x08\x1e\x5b\xf0\xa1\xb0\x28\xdf\xc7\x7b\xbe\xa9\x67\x73\x33\x31\x1f\x31\x27\x1c\xe3\x1c\x9e\x31\x0c\xc8\x46\xa7\x09\x12\x6f\x08\x21\x66\xe8\xdd\x30\x2f\xcb\x94\x7d\xbd\x5a\x4b\x21\x5e\xa5\x87\x46\xd4\x10\x8f\x0f\x45\xbf\x0e\x1c\x66\xdd\xd6\xe0\xd6\x57\x7c\xd2\x84\xa0\x89\x63\x93\x66\x50\x09\x31\x7b\xae\x77\x9a\x75\xea\x49\x26\x5b\x42\x98\x17\x25\x33\x24\xea\x2e\x0d\xf4\x96\x6b\x56\xfb\x9a\x2c\x53\xe7\xf0\xcc\xfe\x98\xbc\x2f\x5d\x1e\x96\x2d\x06\x41\x83\xec\xd7\xde\x5a\x8e\x52\x97\x4b\xfb\xb4\xc0\x3a\xfa\x5f\x9f\xfe\x3d\xa6\xa7\xdc\x4f\xca\xe9\x11\xff\x20\x16\xb3\x08\x8b\x82\xe9\xed\xc1\xf2\x93\xa0\x30\x71\x93\x80\xec\xda\x05\xc3\xdb\x1c\x17\x58\x88\x3e\x9f\x89\xc7\x3c\x02\xd6\x84\x71\x51\x91\x1f\xb4\x65\x41\xb6\x05\xf6\xf7\x59\x02\x66\x76\x23\x17\xf8\x6f\x3c\x16\xf5\xbc\xa2\xfd\xfa\x30\x9f\x9e\x87\x01\x5e\x5f\xa9\xd8\xdd\x4b\xa7\x56\x06\xe9\xd7\x83\x2a\x82\xd0\xa7\xb3\xd9\x00\xf9\x6d\x97\x0c\xf0\x3e\x61\x59\xb3\xb7\x96\xb3\xbb\x64\x2b\x88\x61\x7e\x5c\xb8\x0f\x58\x2c\x81\x95\xfc\x7d\x40\xd5\xd4\x9f\x28\x1a\x4a\xa1\x38\xef\xf3\x56\x02\xc7\x05\xe2\xf3\xd1\x58\x62\x71\x6a\xfa\x05\x37\x2e\x18\x5e\xf2\xbc\xaa\xf4\x89\x0d\x67\x0a\x25\x65\x7e\x21\xfe\xef\xe8\xf4\x62\x38\x3a\xf7\x5b\x74\x81\x76\x3f\x1f\x72\x69\xcd\xad\x23\xbe\xbb\xb7\x35\xd8\x11\x61\x18\x90\x8e\x30\xd9\x1c\x64\x69\x7b\xfe\xa9\x34\xf1\xe8\xf3\x9e\xf9\x24\xe3\x34\xa2\x4b\x3c\xd4\x13\x5e\x37\xdd\x74\x23\x08\x36\x66\xd7\xf6\x5d\x27\x39\x82\xe5\x02\xb1\xf8\xb3\x28\x27\xa3\x39\xf3\x74\x83\x2b\x0e\x4d\x83\xd7\x9f\x62\x3e\xbe\xb6\xda\xdb\xce\xc6\xb2\xbd\xfc\x15\x16\xcf\x7b\xa9\x3c\x7c\x93\xb3\xba\x25\x44\xca\xa5\x0a\xcc\x9c\x38\xe5\xec\xcf\x3e\xa7\xde\xb0\xab\x19\x70\xb3\x06\x6a\x2b\x56\xfb\x13\xf9\x19\x2d\xa5\x7a\xf1\xaf\xe8\x98\xdf\xa6\xa6\x5f\x2c\xcd\xf3\xd3\xd3\xf1\xa5\xd8\x22\xa7\xf2\x1a\x1f\x36\x85\xb0\x6a\x4c\xa2\x13\xf2\xcb\xb0\x78\xee\xd5\x09\x5d\x5c\x8f\xa8\x2a\x29\x20\x62\xff\xad\x3a\xcc\x22\x31\x6b\x5f\xb4\xc1\xfb\x57\x7e\x6e\x48\x83\xc1\x83\x72\xef\x34\xcb\x4c\xac\xdb\xc6\x8f\xf9\xe0\xd3\x88\x6a\xf2\xc1\xa0\x12\x91\x1f\xaa\x53\xc0\x51\xca\x6a\x77\x9d\xcf\x1f\x41\xbe\x71\x8f\x5a\xe1\x02\xf3\xb3\x53\xb1\x21\x71\xfa\x03\xb7\xec\x50\x8c\xba\x65\x44\xfe\x63\x9c\x27\xce\x8d\x7d\x4c\x94\x04\x9d\xd5\x7f\xae\x26\x72\xfd\xa3\x50\x89\xc0\x00\xeb\x39\x90\x4e\xc1\xdc\x21\x1b\xff\xc0\xf4\x11\x8f\x54\xf1\x93\xea\x11\xeb\x6f\x28\x7e\x4d\xd0\x0d\x45\x13\x86\xcc\x61\xf2\x10\x1c\xe5\x3c\x73\xda\xbf\x5a\x34\x11\x5f\x5a\x98\x8e\x8e\xa6\x84\xb9\xc6\x77\x82\x67\x8b\x36\x24\x29\xfb\xfd\x3c\x20\x20\x2f\xde\x5b\xad\xcd\xa1\xae\x76\x6e\xf7\x90\x66\xa8\x1e\x91\xf6\x64\x24\xd7\xc8\x34\x7a\x52\x30\xe7\x11\x2b\x95\x12\x64\xbc\x05\x4f\xb7\x60\x11\x01\x1a\x97\xde\x74\xab\x12\x2f\x7f\xc3\x1f\x5b\x5d\xc6\xeb\x50\x03\x8e\xe2\xd8\x62\x31\x38\x2e\x30\xfb\x6c\x6a\x9e\x6c\x4d\xca\x27\xee\x8b\xa1\x90\x85\xd5\x63\x90\x3e\x47\xe3\xe0\xae\xce\xd6\xdf\xdc\x0d\x2b\x29\xe3\xa2\x3c\x8c\xa0\x0b\x96\x78\xc7\x69\xc1\xd6\xfd\xb5\x49\xde\xa0\xf6\xc7\x24\xac\x1e\xa2\x4f\x04\x62\xef\xb4\x7b\x3b\xeb\xbe\x7b\xa4\x06\x17\x98\x9e\x49\x70\x41\x51\xc7\x34\x31\xcc\x1d\x28\x52\x6f\x6d\xc1\xcc\x19\xcc\xe7\xad\x66\xd5\xde\x5d\xb5\xda\x6d\xb0\x51\x46\xe8\xff\xcc\x05\xe3\xb1\x7f\xce\x3c\xe7\x26\xc2\x66\x50\x91\xc7\xc4\xf1\xfe\x7b\x85\x50\x39\xb3\xf7\xfa\x36\xc3\x4f\x5f\x6a\xda\xef\x0a\xa6\x16\xdf\xed\x0d\x2e\x30\x33\x8f\x56\x45\xff\xc5\x8e\x5f\x1a\xf6\xee\xaa\xa8\xc2\xda\x17\xb4\xcb\x1b\x97\xb0\x94\xc1\xff\xa3\x2f\x05\xa7\xde\xe8\xa5\x72\x70\xfb\x9c\x58\xd3\x67\xfd\xd0\x6b\x04\x35\xcf\xe1\x19\xc8\x1d\x60\x01\x92\xa5\x62\xaa\x97\xda\x80\x5b\x37\x18\x25\xca\x13\xbc\x24\x86\xb0\x3d\x28\x9d\x83\x77\x2f\xa9\x1c\xf7\xb6\x18\x2d\xe1\x3e\x4c\x17\x70\x60\xc4\x90\xd0\x30\xaa\xbc\x8f\xee\x3f\xe7\x4b\x03\x9c\xbc\x22\xdf\xc1\xeb\x2c\xa8\x16\xec\xee\x1f\xf4\xa2\x7f\x99\x8f\xc7\x67\x91\x4b\x55\x51\xa4\x91\x2c\x8a\xf3\x3e\x78\x71\xf0\x4d\x6d\x80\x1e\x47\xcc\x9f\x17\xfc\xae\x04\x49\x2c\x2e\xfc\xce\xa1\x05\xaa\x1b\xda\xe4\xe8\x8b\xd3\xa9\x1f\xc3\xf7\xd7\xf0\xbd\x4b\xd9\xb8\xf2\xe8\xd1\xe5\x1e\x41\xfb\xdc\x25\x3d\x4a\x20\x1e\x03\xa9\x9a\x32\x21\x86\x04\x8d\x2e\x67\x27\x75\x0a\x36\x2a\xb0\x52\x06\x9d\x3c\x48\xef\x81\x76\x8b\xfe\x71\x83\xe4\x16\x66\x5e\x81\x8d\x0a\x51\x90\xec\x0b\x80\x99\x6d\x63\x52\x15\xa8\x43\xba\x57\xc8\x68\xd3\xed\x82\x5a\xa6\xbd\x46\x3e\xf9\x10\x7d\xfc\x3c\x38\xc5\x3f\xde\x2e\x7d\xca\xfa\xc1\x76\xc1\x89\xb6\x77\x57\xc9\x8f\x76\x75\xdb\x2e\x1e\x23\x4e\xc6\x22\xbf\x4f\xb2\x89\x68\x22\x81\x24\x9f\x2e\xe8\x3a\xd2\x2b\x4f\x85\xc9\x01\x1e\x71\xbf\xfb\x5e\x44\x7f\xf7\xa1\x52\x15\xd3\xae\x0a\x51\x35\x05\x11\x2f\xd3\x68\x9e\x29\x19\x70\xa7\xfb\x09\x64\xb7\x49\x78\x2e\x04\x49\x08\x59\x61\x45\x1f\x2b\xea\xbd\x8c\xa2\xa0\x16\xe3\x0b\x53\xcf\xa3\x1c\x2e\x14\x0a\x0b\xd5\xea\x57\x5d\x34\xd8\xc9\x47\xff\x2e\x57\x60\xbe\x60\xdd\xec\x81\xe2\xba\x9f\xfb\x7f\x00\x00\x00\xff\xff\xdd\xd2\xfb\x48\x2a\x13\x00\x00")

func localesZhCnHomeYmlBytes() ([]byte, error) {
	return bindataRead(
		_localesZhCnHomeYml,
		"locales/zh-CN/home.yml",
	)
}

func localesZhCnHomeYml() (*asset, error) {
	bytes, err := localesZhCnHomeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/zh-CN/home.yml", size: 4906, mode: os.FileMode(420), modTime: time.Unix(1620872440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"locales/en-US/home.yml": localesEnUsHomeYml,
	"locales/zh-CN/home.yml": localesZhCnHomeYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"en-US": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesEnUsHomeYml, map[string]*bintree{}},
		}},
		"zh-CN": &bintree{nil, map[string]*bintree{
			"home.yml": &bintree{localesZhCnHomeYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
